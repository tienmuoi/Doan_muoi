<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC0ALQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD137mQp3Bup9KPujYDlT1b0oHy5EfKn7x9KOACqn92epoAOv7v
        Py/3qPv/ACE4C9G9aO23/ll60dRh+Ix900AH+s+98u3p70ZL/OflZei+tH3v9Zxj7vvRyTl+HH3RQAZJ
        PmfxD+GjJH7wcsf4fSjnO7/lr6Ucg7l/1h6igAyU+ZfmLdR6Ufc4U7g3U+lAyuTHyx+8PSgfKCI+VP3v
        agA+6NgOVPVvSjr+7z8o/io4wVXmM9TR1G3/AJZetAC/e+QnCr0b1pM+Z947dvT3oPIAc4jH3T60H5se
        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
</value>
  </data>
</root>